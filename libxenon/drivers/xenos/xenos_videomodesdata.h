#ifndef __xenos_videomodesdata_h
#define __xenos_videomodesdata_h

#include <xetypes.h>

uint32_t ana_vga_640x480 [] = {
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00060001, 0x00000000, 0x00000000, 0xffffffff, 0xac0000d0, 0x00000009, 0x1c0ffc00, 0x00000000,  // 08
0x24900000, 0x00087400, 0xf8461778, 0x48280320, 0x002c1061, 0x4601120d, 0x00000000, 0x02064f2e,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x81612c88, 0x00000000, 0x10b3c8c3,  // 30
0x00000000, 0x00080c0b, 0x00000000, 0x07e7d5dc, 0x00000000, 0x07bfb3d4, 0x00000000, 0x0014180e,  // 38
0x00000000, 0x0000fe00, 0x0000fffd, 0xfd000000, 0x81612c88, 0x00000000, 0x10b3c8c3, 0x00000000,  // 40
0x00080c0b, 0x00000000, 0x07e7d5dc, 0x00000000, 0x07bfb3d4, 0x00000000, 0x0014180e, 0x00000000,  // 48
0x0000fe00, 0x0000fffd, 0xfd000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0f897040, 0x00b85b53, 0xffffffff,  // 70
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c8
0x000562de, 0x001162de, 0x002cfe1f, 0x00205218, 0x00115a17, 0x00000060, 0x00000060, 0x00000000,  // d0
0x0000000f, 0x0001ee60, 0x00000002, 0x00000003, 0x000042aa, 0xffffffff, 0xffffffff, 0xffffffff,  // d8
0x000086d7, 0x00000000, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000001, 0x00000000,  // f8
};

uint32_t ana_vga_1024x768 [] = {
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00060001, 0x00000000, 0x00000000, 0xffffffff, 0x8c0000d0, 0x00000009, 0x1c0ffc00, 0x00000000,  // 08
0x24900000, 0x00087400, 0xf8c89778, 0x94400540, 0x004b9089, 0x46018326, 0x00000000, 0x020ffe5d,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc9500000, 0x00000000, 0x1e300000,  // 30
0x00000000, 0x002c0000, 0x00000000, 0x07580000, 0x00000000, 0x06d00000, 0x00000000, 0x00580000,  // 38
0x00000000, 0x00000000, 0x0000fb00, 0x00000000, 0xc9500000, 0x00000000, 0x1e300000, 0x00000000,  // 40
0x002c0000, 0x00000000, 0x07580000, 0x00000000, 0x06d00000, 0x00000000, 0x00580000, 0x00000000,  // 48
0x00000000, 0x0000fb00, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x1a9894ee, 0x001db0a9, 0xffffffff,  // 70
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c8
0x000551d4, 0x000551d4, 0x002cfe1f, 0x00205218, 0x00115a17, 0x00000060, 0x000000f0, 0x00000000,  // d0
0x00000007, 0x0001ee60, 0x00000002, 0x00000004, 0x000042aa, 0xffffffff, 0xffffffff, 0xffffffff,  // d8
0x00000000, 0x00000000, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000001, 0x00000000,  // f8
};

uint32_t ana_pal60[] = {
0x0000005f, 0x00000003, 0x00000000, 0x00000007, 0x00000000, 0xffffffff, 0xe880a916, 0x07001482,  // 00
0x00060001, 0x00000029, 0x00000000, 0xffffffff, 0xd8000002, 0x00000001, 0x1c0ffc40, 0x06cf00d8,  // 08
0x24900000, 0x1789e000, 0x90674700, 0x74a8030c, 0x00299039, 0x2651b20d, 0x88773443, 0x0300ebff,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x02540f38, 0x0e600002, 0x02540409, 0x00000002, 0x02540000, 0x03310002, 0x83713c67, 0x081268b2,  // 20
0x106408f9, 0x0ed370c8, 0x00381c0e, 0x00341809, 0x0783b7d7, 0x0753a9d6, 0x00841dfd, 0x07bfc7db,  // 28
0x079fdbf4, 0x07e80005, 0xfdfdfdfe, 0xff010c0a, 0x09060402, 0x80c09c47, 0x069234b1, 0x13b4d123,  // 30
0x1103ccd3, 0x00040606, 0x0024180e, 0x07f3e9eb, 0x078bb3d2, 0x07d7c7d7, 0x073f9bce, 0x000c120d,  // 38
0x003c2010, 0x000000fe, 0xfefd00fe, 0xfdfcfcfd, 0x80c09c45, 0x067228ad, 0x1344b11d, 0x1083b4cf,  // 40
0x00040606, 0x0024180e, 0x07f3e9eb, 0x078bb5d3, 0x07d7c9d8, 0x07479dcf, 0x000c120d, 0x003c200f,  // 48
0x000000ff, 0xfefd00fe, 0xfdfcfcfd, 0x40001f18, 0x0e030d0c, 0x79566e05, 0x56793e3e, 0x4000056e,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x78870305, 0x00314733, 0xffffffff,  // 70
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c8
0x00055a9d, 0x001f4a9f, 0x002cfe1f, 0x00205218, 0x00115a17, 0x00000000, 0x00000060, 0x00000000,  // d0
0x0000000f, 0x0001ee60, 0x00000002, 0x00000004, 0x000042aa, 0xffffffff, 0xffffffff, 0xffffffff,  // d8
0x00000000, 0x00000000, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000001, 0x00000000,  // f8
};

uint32_t ana_yuv_480p[] = {
0x0000005f, 0x00000003, 0x00000000, 0x00000007, 0x00000000, 0xffffffff, 0xe880a916, 0x07001482,  // 00
0x00060001, 0x00000029, 0x00000000, 0xffffffff, 0xd8000002, 0x00000001, 0x1c0ffc40, 0x06cf00d8,  // 08
0x24900000, 0x1789e000, 0x90674700, 0x74a8030c, 0x00299039, 0x2651b20d, 0x88773443, 0x0300ebff,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x02540f38, 0x0e600002, 0x02540409, 0x00000002, 0x02540000, 0x03310002, 0x83713c67, 0x081268b2,  // 20
0x106408f9, 0x0ed370c8, 0x00381c0e, 0x00341809, 0x0783b7d7, 0x0753a9d6, 0x00841dfd, 0x07bfc7db,  // 28
0x079fdbf4, 0x07e80005, 0xfdfdfdfe, 0xff010c0a, 0x09060402, 0x80c09c47, 0x069234b1, 0x13b4d123,  // 30
0x1103ccd3, 0x00040606, 0x0024180e, 0x07f3e9eb, 0x078bb3d2, 0x07d7c7d7, 0x073f9bce, 0x000c120d,  // 38
0x003c2010, 0x000000fe, 0xfefd00fe, 0xfdfcfcfd, 0x80c09c45, 0x067228ad, 0x1344b11d, 0x1083b4cf,  // 40
0x00040606, 0x0024180e, 0x07f3e9eb, 0x078bb5d3, 0x07d7c9d8, 0x07479dcf, 0x000c120d, 0x003c200f,  // 48
0x000000ff, 0xfefd00fe, 0xfdfcfcfd, 0x40001f18, 0x0e030d0c, 0x79566e05, 0x56793e3e, 0x4000056e,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x78870305, 0x00314733, 0xffffffff,  // 70
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c8
0x00055a9d, 0x001f4a9f, 0x002cfe1f, 0x00205218, 0x00115a17, 0x00000060, 0x00000060, 0x00000000,  // d0
0x0000000f, 0x0001ee60, 0x00000002, 0x00000004, 0x000042aa, 0xffffffff, 0xffffffff, 0xffffffff,  // d8
0x00000000, 0x00000000, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000001, 0x00000000,  // f8
};


uint32_t ana_pal50[] = {
0x0000005f, 0x00000003, 0x00000000, 0x00000007, 0x00000000, 0xffffffff, 0x4bc44112, 0x08c001c6,  // 00
0x00000008, 0x00000029, 0x00000000, 0xffffffff, 0xd800002a, 0x00000001, 0x1c0ffc40, 0x06cf00d8,  // 08
0x24900000, 0x1539e000, 0x90574700, 0x7f280310, 0x0029e03a, 0x2c5d2271, 0x66573423, 0x050093d4,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x02540f38, 0x0e600002, 0x02540409, 0x00000002, 0x02540000, 0x03310002, 0x8281085e, 0x07b264b5,  // 20
0x11a4550b, 0x0fb39cd0, 0x00301c10, 0x00442410, 0x07a3c1d9, 0x0753a1cf, 0x0047fbec, 0x0783add1,  // 28
0x07c3f1ff, 0x0014140e, 0xfcfcfbfb, 0xfbfc0906, 0x0401fffd, 0x80c09c47, 0x069234b1, 0x13b4d123,  // 30
0x1103ccd3, 0x00040606, 0x0024180e, 0x07f3e9eb, 0x078bb3d2, 0x07d7c7d7, 0x073f9bce, 0x000c120d,  // 38
0x003c2010, 0x000000fe, 0xfefd00fe, 0xfdfcfcfd, 0x80c09c45, 0x067228ad, 0x1344b11d, 0x1083b4cf,  // 40
0x00040606, 0x0024180e, 0x07f3e9eb, 0x078bb5d3, 0x07d7c9d8, 0x07479dcf, 0x000c120d, 0x003c200f,  // 48
0x000000ff, 0xfefd00fe, 0xfdfcfcfd, 0x40001f18, 0x0e030d0c, 0x79566e05, 0x56793e3e, 0x4000056e,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x711bb61b, 0x00ecd9c7, 0xffffffff,  // 70
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c8
0x00056a14, 0x001a3154, 0x002cfe1f, 0x00205218, 0x00115a17, 0x00000060, 0x00000060, 0x00000000,  // d0
0x0000000f, 0x0001ee60, 0x00000002, 0x00000004, 0x000042aa, 0xffffffff, 0xffffffff, 0xffffffff,  // d8
0x946b0000, 0x00000000, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000001, 0x00000000,  // f8
};

uint32_t ana_vga_1280x768[] = {
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00180005, 0x00000000, 0x00000000, 0xffffffff, 0x8c0000d0, 0x00000009, 0x1c0ffc00, 0x00000000,  // 08
0x24900000, 0x00087400, 0xf8e81770, 0xa0500680, 0x00601081, 0x3601831e, 0x00000000, 0x020ffe5d,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc9500000, 0x00000000, 0x1e300000,  // 30
0x00000000, 0x002c0000, 0x00000000, 0x07580000, 0x00000000, 0x06d00000, 0x00000000, 0x00580000,  // 38
0x00000000, 0x00000000, 0x0000fb00, 0x00000000, 0xc9500000, 0x00000000, 0x1e300000, 0x00000000,  // 40
0x002c0000, 0x00000000, 0x07580000, 0x00000000, 0x06d00000, 0x00000000, 0x00580000, 0x00000000,  // 48
0x00000000, 0x0000fb00, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x5594e543, 0x00ddb0a9, 0xffffffff,  // 70
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c8
0x000582d8, 0x000582d8, 0x002cfe1f, 0x00205218, 0x00115a17, 0x00000060, 0x00000060, 0x00000000,  // d0
0x0000000f, 0x0001ee60, 0x00000002, 0x00000004, 0x000042aa, 0xffffffff, 0xffffffff, 0xffffffff,  // d8
0x00000000, 0x00000000, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000001, 0x00000000,  // f8
};

uint32_t ana_vga_1360x768[] = {
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00180005, 0x00000000, 0x00000000, 0xffffffff, 0x840000d0, 0x00000009, 0x1c0ffc00, 0x00000000,  // 08
0x00000000, 0x00087400, 0xf8c71750, 0xb8550700, 0x00691071, 0x3001831b, 0x00000000, 0x010fff26,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x90f00000, 0x00000000, 0x00000000,  // 30
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 38
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x90f00000, 0x00000000, 0x00000000, 0x00000000,  // 40
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 48
0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x519d02fb, 0x00885b53, 0xffffffff,  // 70
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c8
0x00095a9c, 0x00045a9c, 0x002cfe1f, 0x00205218, 0x00115a17, 0x00000060, 0x00000060, 0x00000000,  // d0
0x0000000f, 0x0001ee60, 0x00000002, 0x00000004, 0x000042aa, 0xffffffff, 0xffffffff, 0xffffffff,  // d8
0x00000000, 0x00000000, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000001, 0x00000000,  // f8
};

uint32_t ana_vga_1280x720[] = {
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00180005, 0x00000000, 0x00000000, 0xffffffff, 0x8e0000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x24900000, 0x0009d800, 0xf8a29750, 0x82500672, 0x0064b029, 0x320282ee, 0x00000000, 0x020ffe5d,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x85700000, 0x00000000, 0x11a00000,  // 30
0x00000000, 0x00180000, 0x00000000, 0x079c0000, 0x00000000, 0x07500000, 0x00000000, 0x00340000,  // 38
0x00000000, 0x00000000, 0x0000fd00, 0x00000000, 0x85700000, 0x00000000, 0x11a00000, 0x00000000,  // 40
0x00180000, 0x00000000, 0x079c0000, 0x00000000, 0x07500000, 0x00000000, 0x00340000, 0x00000000,  // 48
0x00000000, 0x0000fd00, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x6485e4e9, 0x00adb0a9, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x4455002a,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x020c804e, 0x08e84014, 0x00000014,  // c8
0x00069b18, 0x00069b18, 0x002cfe1f, 0x09832017, 0x0990e00e, 0x00000060, 0x00000060, 0x00000008,  // d0
0x00000007, 0x00000020, 0x00000002, 0x00000002, 0x000042aa, 0xffffffff, 0xffffffff, 0x00000001,  // d8
0x00000000, 0x00000000, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00010001, 0x00000000,  // f8
};

uint32_t ana_vga_1440x900[] = {
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00180005, 0x00000000, 0x00000000, 0xffffffff, 0x860000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x00000000, 0x0009d800, 0xf8c99770, 0xc05a0770, 0x006d9099, 0x3e0183a6, 0x00000000, 0x010fff26,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x93c00000, 0x00000000, 0x00000000,  // 30
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 38
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x93c00000, 0x00000000, 0x00000000, 0x00000000,  // 40
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 48
0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x37b632da, 0x007305fe, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xa44100cd,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x020c804e, 0x08e84014, 0x00000014,  // c8
0x0005531b, 0x0002531b, 0x002cfe1f, 0x09832017, 0x0990e00e, 0x00000060, 0x00000060, 0x00000008,  // d0
0x00000007, 0x00000020, 0x00000002, 0x00000005, 0x000042aa, 0xffffffff, 0xffffffff, 0x00000001,  // d8
0x00000000, 0x0000a987, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00010001, 0x00000000,  // f8
};

uint32_t ana_vga_1280x1024[] = {
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00060001, 0x00000000, 0x00000000, 0xffffffff, 0x860000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x00000000, 0x0009d800, 0xf8671750, 0xb4500698, 0x00629071, 0x5200842a, 0x00000000, 0x010fff26,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x93c00000, 0x00000000, 0x00000000,  // 30
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 38
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x93c00000, 0x00000000, 0x00000000, 0x00000000,  // 40
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 48
0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x38a911a2, 0x00f305fe, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xf1d30073,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x020c804e, 0x08e84014, 0x00000014,  // c8
0x00075a17, 0x00035a17, 0x002cfe1f, 0x09832017, 0x0990e00e, 0x00000060, 0x00000060, 0x00000008,  // d0
0x00000007, 0x00000020, 0x00000002, 0x00000002, 0x000042aa, 0xffffffff, 0xffffffff, 0x00000001,  // d8
0x00000000, 0x00000000, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00010001, 0x00000000,  // f8
};

uint32_t ana_hdmi_720p[] = {
0x000000c1, 0x0000000b, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x860000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x00000000, 0x00087400, 0xf8529700, 0x82500672, 0x0064b029, 0x320282ee, 0x00000000, 0x00000000,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 30
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 38
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 40
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 48
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00001001, 0x00011a78, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x906600de,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x020c804e, 0x08e84014, 0x00000014,  // c8
0x000d9b18, 0x00069b18, 0x002cfe1f, 0x09832017, 0x0990e00e, 0x00000000, 0x00000000, 0x0000000f,  // d0
0x0000000f, 0x00000020, 0x00000002, 0x00000005, 0x000042aa, 0xffffffff, 0xffffffff, 0x00000000,  // d8
0x00000000, 0x00000000, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00010001, 0x00000000,  // f8
};

uint32_t ana_yuv_720p[] = {
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x4c00a915, 0x22800730,  // 00
0x0024000d, 0x00000029, 0x00000000, 0xffffffff, 0x88000090, 0x00000001, 0x3c0ffc40, 0x00000000,  // 08
0x24900000, 0xd789e029, 0x90a2a728, 0x96500672, 0x0012d62d, 0x320282ee, 0x00a00000, 0x030273fe,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x02540f38, 0x0e600002, 0x02540409, 0x00000002, 0x02540000, 0x03310002, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x85700000, 0x00000000, 0x11900000,  // 30
0x00000000, 0x00180000, 0x00000000, 0x07a00000, 0x00000000, 0x07500000, 0x00000000, 0x00340000,  // 38
0x00000000, 0x00000000, 0x0000fd00, 0x00000000, 0x85500000, 0x00000000, 0x11300000, 0x00000000,  // 40
0x00180000, 0x00000000, 0x07a00000, 0x00000000, 0x07540000, 0x00000000, 0x00340000, 0x00000000,  // 48
0x00000000, 0x0000fd00, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x70ad61bd, 0x003db0a9, 0x00000000,  // 70
0x00000000, 0x00000000, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x00000036,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x020c804e, 0x08e84014, 0x00000014,  // c8
0x00069b18, 0x00069b18, 0x002cfe1f, 0x09832017, 0x0990e00e, 0x00000060, 0x00000060, 0x00000008,  // d0
0x00000007, 0x00000020, 0x00000002, 0x00000001, 0x000042aa, 0xffffffff, 0xffffffff, 0x00000001,  // d8
0x00000000, 0x00000000, 0x00008301, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00010001, 0x00000000,  // f8
};

uint32_t ana_ntsc[] = {
0x00000051, 0x00000003, 0x00000000, 0x00000007, 0x00000000, 0xffffffff, 0xe880a916, 0x07001482,  // 00
0x00180005, 0x00000029, 0x00000000, 0xffffffff, 0xd8000000, 0x00000001, 0x3c0ffc40, 0x064b0000,  // 08
0x24900300, 0x9789e029, 0x00674700, 0x74a8030c, 0x00299039, 0x2651b20d, 0x67672323, 0x0300ebff,  // 10
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 18
0x02540f38, 0x0e600002, 0x02540409, 0x00000002, 0x02540000, 0x03310002, 0xc68250c3, 0x0f348d50,  // 20
0x1f07a1d7, 0x1bf6817a, 0x0068361b, 0x00642c10, 0x071375b2, 0x06bb5bb2, 0x00f835fa, 0x077f95bb,  // 28
0x0743b9e9, 0x07d7fe09, 0xfafafbfc, 0xfe011714, 0x100c0804, 0xc0000000, 0x00000000, 0x00000000,  // 30
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 38
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000, 0x00000000, 0x00000000,  // 40
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 48
0x00000000, 0x00000000, 0x00000000, 0x40001e18, 0x0e030e0c, 0x09636439, 0x63093737, 0x40003964,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x638fe262, 0x00385b53, 0x00000000,  // 70
0x00000000, 0x00000000, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x00000034,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x020c804e, 0x08e84014, 0x00000014,  // c8
0x00055a9d, 0x001f4a9f, 0x002cfe1f, 0x09832017, 0x0990e00e, 0x00000060, 0x00000060, 0x00000004,  // d0
0x0000000f, 0x00000020, 0x00000002, 0x00000004, 0x000042aa, 0xffffffff, 0xffffffff, 0x00000000,  // d8
0x89250000, 0x00000000, 0x00000000, 0x8436f666, 0x0000001b, 0xffffffff, 0xffffffff, 0xffffffff,  // e0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // e8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00010001, 0x00000000,  // f8
};

uint32_t ana_vga_640x480_corona[] = { //Corona dump
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00060001, 0x00000000, 0x00000000, 0xffffffff, 0xae0000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x24900000, 0x00087400, 0xf8461778, 0x48280320, 0x002c1061, 0x4601120d, 0x00000000, 0x02064f2e,  // 10
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x81612c88, 0x00000000, 0x10b3c8c3,  // 30
0x00000000, 0x00080c0b, 0x00000000, 0x07e7d5dc, 0x00000000, 0x07bfb3d4, 0x00000000, 0x0014180e,  // 38
0x00000000, 0x0000fe00, 0x0000fffd, 0xfd000000, 0x81612c88, 0x00000000, 0x10b3c8c3, 0x00000000,  // 40
0x00080c0b, 0x00000000, 0x07e7d5dc, 0x00000000, 0x07bfb3d4, 0x00000000, 0x0014180e, 0x00000000,  // 48
0x0000fe00, 0x0000fffd, 0xfd000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x4287126e, 0x00e85b53, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x35a400e8,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0000b332, 0x1c7890e7, 0x0054acc0,  // c8
0x44904830, 0x008f0510, 0x02d90e38, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x04040808, 0x00000000, 0x00000000, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x00000000, 0x00000000, 0x041b0404, 0x00000410, 0x000003e2, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_vga_1024x768_corona[] = { // Corona dump
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00060001, 0x00000000, 0x00000000, 0xffffffff, 0x8e0000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x24900000, 0x00087400, 0xf8c89778, 0x94400540, 0x004b9089, 0x46018326, 0x00000000, 0x020ffe5d,  // 10
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc9500000, 0x00000000, 0x1e300000,  // 30
0x00000000, 0x002c0000, 0x00000000, 0x07580000, 0x00000000, 0x06d00000, 0x00000000, 0x00580000,  // 38
0x00000000, 0x00000000, 0x0000fb00, 0x00000000, 0xc9500000, 0x00000000, 0x1e300000, 0x00000000,  // 40
0x002c0000, 0x00000000, 0x07580000, 0x00000000, 0x06d00000, 0x00000000, 0x00580000, 0x00000000,  // 48
0x00000000, 0x0000fb00, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x30ab8399, 0x00e305fe, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x0af90042,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00015332, 0x1c7890e7, 0x0054acc0,  // c8
0x44d02852, 0x009201da, 0x02d9822d, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x00000000, 0x00000000, 0x00000000, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x03ef07df, 0x00000000, 0x04320419, 0x00000425, 0x000003f0, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_vga_1280x720_corona[] = { // Corona dump
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00180005, 0x00000000, 0x00000000, 0xffffffff, 0x8e0000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x24900000, 0x00087400, 0xf8a29750, 0x82500672, 0x0064b029, 0x320282ee, 0x00000000, 0x020ffe5d,  // 10
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc9500000, 0x00000000, 0x1e300000,  // 30
0x00000000, 0x002c0000, 0x00000000, 0x07580000, 0x00000000, 0x06d00000, 0x00000000, 0x00580000,  // 38
0x00000000, 0x00000000, 0x0000fb00, 0x00000000, 0xc9500000, 0x00000000, 0x1e300000, 0x00000000,  // 40
0x002c0000, 0x00000000, 0x07580000, 0x00000000, 0x06d00000, 0x00000000, 0x00580000, 0x00000000,  // 48
0x00000000, 0x0000fb00, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3ea5c51d, 0x00ddb0a9, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xc31e00b2,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0000d332, 0x1c7890e7, 0x0054acc0,  // c8
0x44bc2040, 0x00b60870, 0x02d91462, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x00000000, 0x043c0878, 0x042f085e, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x00000000, 0x00000000, 0x043c0422, 0x0000042f, 0x000003f6, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_vga_1280x768_corona[] = { // Corona dump
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00180005, 0x00000000, 0x00000000, 0xffffffff, 0x8e0000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x24900000, 0x00087400, 0xf8e81770, 0xa0500680, 0x00601081, 0x3601831e, 0x00000000, 0x020ffe5d,  // 10
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc9500000, 0x00000000, 0x1e300000,  // 30
0x00000000, 0x002c0000, 0x00000000, 0x07580000, 0x00000000, 0x06d00000, 0x00000000, 0x00580000,  // 38
0x00000000, 0x00000000, 0x0000fb00, 0x00000000, 0xc9500000, 0x00000000, 0x1e300000, 0x00000000,  // 40
0x002c0000, 0x00000000, 0x07580000, 0x00000000, 0x06d00000, 0x00000000, 0x00580000, 0x00000000,  // 48
0x00000000, 0x0000fb00, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x138012d6, 0x00985b53, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x3daa0073,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00019332, 0x1c7890e7, 0x0054acc0,  // c8
0x45002852, 0x00f603d3, 0x02d98a7a, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x00000000, 0x00000000, 0x00000000, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x00000000, 0x00000000, 0x0436041c, 0x00000429, 0x000003f1, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_vga_1280x1024_corona[] = { // Corona dump
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00060001, 0x00000000, 0x00000000, 0xffffffff, 0x860000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x00000000, 0x00087400, 0xf8671750, 0xb4500698, 0x00629071, 0x5200842a, 0x00000000, 0x010fff26,  // 10
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x90f00000, 0x00000000, 0x00000000,  // 30
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 38
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x90f00000, 0x00000000, 0x00000000, 0x00000000,  // 40
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 48
0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x13ac3439, 0x007305fe, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x79000008,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00015332, 0x1c7890e7, 0x0054acc0,  // c8
0x44d01860, 0x0069054f, 0x02d9890d, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x00000000, 0x00000000, 0x00000000, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x00000000, 0x00000000, 0x043c0423, 0x0000042f, 0x000003f7, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_vga_1360x768_corona[] = { // Corona dump
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00180005, 0x00000000, 0x00000000, 0xffffffff, 0x860000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x00000000, 0x00087400, 0xf8c71750, 0xb8550700, 0x00691071, 0x3001831b, 0x00000000, 0x010fff26,  // 10
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x90f00000, 0x00000000, 0x00000000,  // 30
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 38
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x90f00000, 0x00000000, 0x00000000, 0x00000000,  // 40
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 48
0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x5cb04272, 0x00e305fe, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xf153005d,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0000d332, 0x1c7890e7, 0x0054acc0,  // c8
0x44a41860, 0x00b20720, 0x02d98091, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x00000000, 0x00000000, 0x042e085c, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x03f407e8, 0x00000000, 0x043c0422, 0x0000042e, 0x000003f4, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_vga_1440x900_corona[] = { // Corona dump
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00180005, 0x00000000, 0x00000000, 0xffffffff, 0x860000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x00000000, 0x00087400, 0xf8c99770, 0xc05a0770, 0x006d9099, 0x3e0183a6, 0x00000000, 0x010fff26,  // 10
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x90f00000, 0x00000000, 0x00000000,  // 30
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 38
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x90f00000, 0x00000000, 0x00000000, 0x00000000,  // 40
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 48
0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x6998910d, 0x001db0a9, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x7eb500c1,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0001b332, 0x1c7890e7, 0x0054acc0,  // c8
0x45102083, 0x007f0169, 0x02d90699, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x00000000, 0x04380870, 0x00000000, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x00000000, 0x00000000, 0x0438041f, 0x0000042b, 0x000003f7, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_pal60_corona[] = { // Corona Dump PAL 60
0x0000005f, 0x00000003, 0x00000000, 0x00000007, 0x00000000, 0xffffffff, 0xe880a916, 0x07001482,  // 00
0x00060001, 0x00000029, 0x00000000, 0xffffffff, 0xd8000002, 0x00000001, 0x3c0ffc40, 0x06cf00d8,  // 08
0x24900000, 0xd789e029, 0x90674700, 0x74a8030c, 0x00299039, 0x2651b20d, 0x88773443, 0x0300ebff,  // 10
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,  // 18
0x02540f38, 0x0e600002, 0x02540409, 0x00000002, 0x02540000, 0x03310002, 0x83713c67, 0x081268b2,  // 20
0x106408f9, 0x0ed370c8, 0x00381c0e, 0x00341809, 0x0783b7d7, 0x0753a9d6, 0x00841dfd, 0x07bfc7db,  // 28
0x079fdbf4, 0x07e80005, 0xfdfdfdfe, 0xff010c0a, 0x09060402, 0x80c09c47, 0x069234b1, 0x13b4d123,  // 30
0x1103ccd3, 0x00040606, 0x0024180e, 0x07f3e9eb, 0x078bb3d2, 0x07d7c7d7, 0x073f9bce, 0x000c120d,  // 38
0x003c2010, 0x000000fe, 0xfefd00fe, 0xfdfcfcfd, 0x80c09c45, 0x067228ad, 0x1344b11d, 0x1083b4cf,  // 40
0x00040606, 0x0024180e, 0x07f3e9eb, 0x078bb5d3, 0x07d7c9d8, 0x07479dcf, 0x000c120d, 0x003c200f,  // 48
0x000000ff, 0xfefd00fe, 0xfdfcfcfd, 0x40001f18, 0x0e030d0c, 0x79566e05, 0x56793e3e, 0x4000056e,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x6a81440c, 0x003a09ac, 0x00000000,  // 70
0x00000000, 0x00000000, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x00000055,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00015332, 0x1c7890e7, 0x0054acc0,  // c8
0x44ecf050, 0x006e0654, 0x02d98327, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x00000000, 0x00000000, 0x00000000, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x03df07bf, 0x00000000, 0x041103f8, 0x00000407, 0x000003e0, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_pal50_corona[] = { // Corona Dump PAL 50
0x00000051, 0x00000003, 0x00000000, 0x00000007, 0x00000000, 0xffffffff, 0x4bc44112, 0x08c001c6,  // 00
0x00000008, 0x00000029, 0x00000000, 0xffffffff, 0xd800002a, 0x00000001, 0x3c0ffc40, 0x06cf00d8,  // 08
0x24900300, 0xd789e029, 0x80574700, 0x7f280310, 0x0029e03a, 0x2c5d2271, 0x66573423, 0x050093d4,  // 10
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,  // 18
0x02540f38, 0x0e600002, 0x02540409, 0x00000002, 0x02540000, 0x03310002, 0x8281085e, 0x07b264b5,  // 20
0x11a4550b, 0x0fb39cd0, 0x00301c10, 0x00442410, 0x07a3c1d9, 0x0753a1cf, 0x0047fbec, 0x0783add1,  // 28
0x07c3f1ff, 0x0014140e, 0xfcfcfbfb, 0xfbfc0906, 0x0401fffd, 0xc0000000, 0x00000000, 0x00000000,  // 30
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 38
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000, 0x00000000, 0x00000000,  // 40
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 48
0x00000000, 0x00000000, 0x00000000, 0x40001f18, 0x0e030d0c, 0x79566e05, 0x56793e3e, 0x4000056e,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0222d35b, 0x00137d23, 0x00000000,  // 70
0x00000000, 0x00000000, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x000000b0,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00019332, 0x1c7890e7, 0x0054acc0,  // c8
0x44ecf050, 0x006405be, 0x02d986f1, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x041b0836, 0x00000000, 0x00000000, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x00000000, 0x00000000, 0x0433041b, 0x00000427, 0x000003f0, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_yuv_480p_corona[] = {
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x5180a920, 0x22c008cd,  // 00
0x00060001, 0x00000029, 0x00000000, 0xffffffff, 0xa8000050, 0x00000001, 0x3c0ffc40, 0x00000000,  // 08
0x24900000, 0xd789e029, 0x90c73700, 0x76a8030c, 0x005a7073, 0x4c03820d, 0x00000000, 0x0401dbf3,  // 10
0x51043920, 0x2f00014d, 0x1008804d, 0x00000e08, 0x00000000, 0x00000000, 0x00000053, 0xffffffff,  // 18
0x02540f38, 0x0e600002, 0x02540409, 0x00000002, 0x02540000, 0x03310002, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x81915c9e, 0x00000000, 0x13946ce3,  // 30
0x00000000, 0x00080e0d, 0x00000000, 0x07e3cdd6, 0x00000000, 0x07b3a7cd, 0x00000000, 0x00181c10,  // 38
0x00000000, 0x00fffe00, 0x0000fefd, 0xfd000000, 0x8191589b, 0x00000000, 0x13244cdf, 0x00000000,  // 40
0x00080e0c, 0x00000000, 0x07e3cfd7, 0x00000000, 0x07b3a9ce, 0x00000000, 0x00181c0f, 0x00000000,  // 48
0x00fffe00, 0x0000fefd, 0xfd000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x4b96c4ac, 0x00885b53, 0x00000000,  // 70
0x00000000, 0x00000000, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x00000070,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00019332, 0x1c7890e7, 0x0054acc0,  // c8
0x44ec7850, 0x006e0654, 0x02d98327, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x0415082a, 0x00000000, 0x00000000, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x03f007e0, 0x00000000, 0x042d0415, 0x00000421, 0x000003f0, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_yuv_720p_corona[] = { // Corona dump
0x0000004f, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x4c00a915, 0x22800730,  // 00
0x0024000d, 0x00000029, 0x00000000, 0xffffffff, 0x88000090, 0x00000001, 0x3c0ffc40, 0x00000000,  // 08
0x24900000, 0xd789e029, 0x90a2a728, 0x96500672, 0x0012d62d, 0x320282ee, 0x00a00000, 0x030273fe,  // 10
0x4b843915, 0x2ea000f0, 0x1108804d, 0x00000e04, 0x00000000, 0x00000000, 0x0000000f, 0xffffffff,  // 18
0x02540f38, 0x0e600002, 0x02540409, 0x00000002, 0x02540000, 0x03310002, 0xc0000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x85700000, 0x00000000, 0x11900000,  // 30
0x00000000, 0x00180000, 0x00000000, 0x07a00000, 0x00000000, 0x07500000, 0x00000000, 0x00340000,  // 38
0x00000000, 0x00000000, 0x0000fd00, 0x00000000, 0x85500000, 0x00000000, 0x11300000, 0x00000000,  // 40
0x00180000, 0x00000000, 0x07a00000, 0x00000000, 0x07540000, 0x00000000, 0x00340000, 0x00000000,  // 48
0x00000000, 0x0000fd00, 0x00000000, 0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x6ea63397, 0x00f85b53, 0x00000000,  // 70
0x00000000, 0x00000000, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x00000070,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00019332, 0x1c7890e7, 0x0054acc0,  // c8
0x44ec2850, 0x00b60a8c, 0x02d90bd4, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x00000000, 0x00000000, 0x00000000, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x00000000, 0x00000000, 0x043a0421, 0x0000042d, 0x000003f5, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_hdmi_720p_corona[] = { // Corona dump
0x000002c1, 0x0000001b, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000,  // 00
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x860000d0, 0x00000009, 0x1ffffc00, 0x066c0000,  // 08
0x00000000, 0x00087400, 0xf8529750, 0x82500672, 0x0064b029, 0x320282ee, 0x00000000, 0x00000000,  // 10
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,  // 18
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 20
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 28
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 30
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 38
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 40
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 48
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00001001, 0x00011a78, 0x00000001,  // 70
0x351f2e53, 0x4400f126, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x911e0037,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00019332, 0x1c7890e7, 0x0054acc0,  // c8
0x44ec28a1, 0x00b60546, 0x02d90bc1, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x0000007f,  // d0
0x0000007f, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x00000000, 0x00000000, 0x00000000, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x00000000, 0x00000000, 0x041f0406, 0x00000412, 0x000003de, 0x02000063, 0x0000019a,  // e8
0x026b026b, 0x026b026b, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

uint32_t ana_ntsc_corona[] = {
0x00000051, 0x00000003, 0x00000000, 0x00000007, 0x00000000, 0xffffffff, 0xe880a916, 0x07001482,  // 00
0x00060001, 0x00000029, 0x00000000, 0xffffffff, 0xd8000000, 0x00000001, 0x3c0ffc40, 0x066c0000,  // 08
0x24900300, 0xd789e029, 0x00674700, 0x74a8030c, 0x00299039, 0x2651b20d, 0x67672323, 0x0300ebff,  // 10
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,  // 18
0x02540f38, 0x0e600002, 0x02540409, 0x00000002, 0x02540000, 0x03310002, 0x8381406a, 0x084274b6,  // 20
0x10c420ff, 0x0f2384cd, 0x00381e0f, 0x00381809, 0x0783b5d6, 0x074fa7d5, 0x00881dfc, 0x07bbc7db,  // 28
0x079bd9f3, 0x07e80005, 0xfdfdfdfe, 0xff000c0b, 0x09060402, 0xc0000000, 0x00000000, 0x00000000,  // 30
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 38
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc0000000, 0x00000000, 0x00000000, 0x00000000,  // 40
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // 48
0x00000000, 0x00000000, 0x00000000, 0x40001e18, 0x0e030e0c, 0x0a616139, 0x610a3b3b, 0x40003961,  // 50
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 58
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 60
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdeadbeef, 0x00000000, 0x00000000,  // 68
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x6c8d8255, 0x00685b53, 0x00000000,  // 70
0x00000000, 0x00000000, 0xdeadbeef, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x000000f7,  // 78
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 80
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 88
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 90
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // 98
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // a8
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // b8
0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // c0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00015332, 0x1c7890e7, 0x0054acc0,  // c8
0x44ecf050, 0x006e0654, 0x02d98327, 0x1b02659d, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // d0
0x00000000, 0x00000000, 0x00000002, 0x01f001f0, 0x000001f0, 0x00ffafff, 0x00001000, 0x00000001,  // d8
0x04000800, 0x041b0836, 0x00000000, 0x80217005, 0x00000000, 0x02000063, 0x02000063, 0x02000063,  // e0
0x00000000, 0x00000000, 0x00000000, 0x041b0400, 0x0000040f, 0x000003d1, 0x02000063, 0x0000019a,  // e8
0x0291028e, 0x028e0285, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,  // f0
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00020003, 0x00000000,  // f8
};

struct mode_s
{
	char* name;
	uint32_t* ana;
	int height;
	int total_height;
	int active_height;
	int width;
	int total_width;
	int real_active_width;
	int hsync_offset;	
	int vsync_offset;		
	int composite_sync;
	int is_progressive;
	int rgb;
	int hdmi;
	int overscan;
} xenos_modes[] = {
	{
		.name = "PAL50",
		.ana = ana_pal50,
		.height = 288,
		.total_height = 625,
		.active_height = 288,
		.width = 640,
		.total_width = 784,
		.real_active_width = 640,
		.hsync_offset = 91,
		.vsync_offset = 44,
		.composite_sync = 1,
		.is_progressive = 0,
		.rgb = 0,
		.hdmi = 0,
		.overscan = 1,
	},
	{
		.name = "PAL60",
		.ana = ana_pal60,
		.height = 240,
		.total_height = 525,
		.active_height = 240,
		.width = 640,
		.total_width = 780,
		.real_active_width = 640,
		.hsync_offset = 80,		
		.vsync_offset = 38,		
		.composite_sync = 1,
		.is_progressive = 0,
		.rgb = 0,
		.hdmi = 0,
		.overscan = 1,
	},
	{
		.name = "NTSC",
		.ana = ana_ntsc,
		.height = 240,
		.total_height = 525,
		.active_height = 240,
		.width = 640,
		.total_width = 780,
		.real_active_width = 640,
		.hsync_offset = 80,
		.vsync_offset = 38,
		.composite_sync = 1,
		.is_progressive = 0,
		.rgb = 0,
		.hdmi = 0,
		.overscan = 1,
	},
	{
		.name = "Component 480p",
		.ana = ana_yuv_480p,
		.height = 480,
		.total_height = 525,
		.active_height = 480,
		.width = 640,
		.total_width = 780,
		.real_active_width = 640,
		.hsync_offset = 82,		
		.vsync_offset = 38,
		.composite_sync = 1,
		.is_progressive = 1,
		.rgb = 0,
		.hdmi = 0,
		.overscan = 1,		
	},
	{
		.name = "Component 720p",
		.ana = ana_yuv_720p,
		.height = 720,
		.total_height = 750,
		.active_height = 720,
		.width = 1280,
		.total_width = 1650,
		.real_active_width = 1280,
		.hsync_offset = 245,
		.vsync_offset = 25,
		.composite_sync = 1,
		.is_progressive = 1,
		.rgb = 0,
		.hdmi = 0,
		.overscan = 1,
	},
	{	
		.name = "HDMI 720p",
		.ana = ana_hdmi_720p,
		.height = 720,
		.total_height = 750,
		.active_height = 720,
		.width = 1280,
		.total_width = 1650,
		.real_active_width = 1280,
		.hsync_offset = 259,
		.vsync_offset = 25,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 1,
		.overscan = 1,
	},
	{
		.name = "VGA 640x480",
		.ana = ana_vga_640x480,
		.height = 480,
		.total_height = 525,
		.active_height = 480,
		.width = 640,
		.total_width = 800,
		.real_active_width = 640,
		.hsync_offset = 86,		
		.vsync_offset = 35,
		.composite_sync = 0,
		.is_progressive = 1,		
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	}, 
	{
		.name = "VGA 1024x768",
		.ana = ana_vga_1024x768,
		.height = 768,
		.total_height = 806,
		.active_height = 768,
		.width = 1024,
		.total_width = 1344,
		.real_active_width = 1024,
		.hsync_offset = 235,
		.vsync_offset = 35,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	},
	{
		.name = "VGA 1280x720",
		.ana = ana_vga_1280x720,
		.height = 720,
		.total_height = 750,
		.active_height = 720,
		.width = 1280,
		.total_width = 1650,
		.real_active_width = 1280,
		.hsync_offset = 199,
		.vsync_offset = 25,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,		
	},
	{
		.name = "VGA 1280x768",
		.ana = ana_vga_1280x768,
		.height = 768,
		.total_height = 798,
		.active_height = 768,
		.width = 1280,
		.total_width = 1664,
		.real_active_width = 1280,		
		.hsync_offset = 259,
		.vsync_offset = 27,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	},
	{	
		.name = "VGA 1280x1024",
		.ana = ana_vga_1280x1024,
		.height = 1024,
		.total_height = 1066,
		.active_height = 1024,
		.width = 1280,
		.total_width = 1688,
		.real_active_width = 1280,
		.hsync_offset = 293,
		.vsync_offset = 41,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	},
	{
		.name = "VGA 1360x768",
		.ana = ana_vga_1360x768,
		.height = 768,
		.total_height = 795,
		.active_height = 768,
		.width = 1376,
		.total_width = 1792,
		.real_active_width = 1360,
		.hsync_offset = 301,
		.vsync_offset = 24,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	},	
	{	
		.name = "VGA 1440x900",
		.ana = ana_vga_1440x900,
		.height = 896, //FIXME: EDRAM isn't big enough to render 1440*900
		.total_height = 934,
		.active_height = 900,
		.width = 1440,
		.total_width = 1904,
		.real_active_width = 1440,
		.hsync_offset = 317,
		.vsync_offset = 31,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	},
};

struct mode_s xenos_modes_corona[] = {
	{
		.name = "PAL50",
		.ana = ana_pal50_corona,
		.height = 288,
		.total_height = 625,
		.active_height = 288,
		.width = 640,
		.total_width = 784,
		.real_active_width = 640,
		.hsync_offset = 91,
		.vsync_offset = 44,
		.composite_sync = 1,
		.is_progressive = 0,
		.rgb = 0,
		.hdmi = 0,
		.overscan = 1,
	},
	{
		.name = "PAL60",
		.ana = ana_pal60_corona,
		.height = 240,
		.total_height = 525,
		.active_height = 240,
		.width = 640,
		.total_width = 780,
		.real_active_width = 640,
		.hsync_offset = 80,		
		.vsync_offset = 38,		
		.composite_sync = 1,
		.is_progressive = 0,
		.rgb = 0,
		.hdmi = 0,
		.overscan = 1,
	},
	{
		.name = "NTSC",
		.ana = ana_ntsc_corona,
		.height = 240,
		.total_height = 525,
		.active_height = 240,
		.width = 640,
		.total_width = 780,
		.real_active_width = 640,
		.hsync_offset = 80,
		.vsync_offset = 38,
		.composite_sync = 1,
		.is_progressive = 0,
		.rgb = 0,
		.hdmi = 0,
		.overscan = 1,
	},
	{
		.name = "Component 480p",
		.ana = ana_yuv_480p_corona,
		.height = 480,
		.total_height = 525,
		.active_height = 480,
		.width = 640,
		.total_width = 780,
		.real_active_width = 640,
		.hsync_offset = 82,		
		.vsync_offset = 38,
		.composite_sync = 1,
		.is_progressive = 1,
		.rgb = 0,
		.hdmi = 0,
		.overscan = 1,		
	},
	{
		.name = "Component 720p",
		.ana = ana_yuv_720p_corona,
		.height = 720,
		.total_height = 750,
		.active_height = 720,
		.width = 1280,
		.total_width = 1650,
		.real_active_width = 1280,
		.hsync_offset = 245,
		.vsync_offset = 25,
		.composite_sync = 1,
		.is_progressive = 1,
		.rgb = 0,
		.hdmi = 0,
		.overscan = 1,
	},
	{	
		.name = "HDMI 720p",
		.ana = ana_hdmi_720p_corona,
		.height = 720,
		.total_height = 750,
		.active_height = 720,
		.width = 1280,
		.total_width = 1650,
		.real_active_width = 1280,
		.hsync_offset = 259,
		.vsync_offset = 25,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 1,
		.overscan = 1,
	},
	{
		.name = "VGA 640x480",
		.ana = ana_vga_640x480_corona,
		.height = 480,
		.total_height = 525,
		.active_height = 480,
		.width = 640,
		.total_width = 800,
		.real_active_width = 640,
		.hsync_offset = 86,		
		.vsync_offset = 35,
		.composite_sync = 0,
		.is_progressive = 1,		
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	}, 
	{
		.name = "VGA 1024x768",
		.ana = ana_vga_1024x768_corona,
		.height = 768,
		.total_height = 806,
		.active_height = 768,
		.width = 1024,
		.total_width = 1344,
		.real_active_width = 1024,
		.hsync_offset = 235,
		.vsync_offset = 35,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	},
	{
		.name = "VGA 1280x720",
		.ana = ana_vga_1280x720_corona,
		.height = 720,
		.total_height = 750,
		.active_height = 720,
		.width = 1280,
		.total_width = 1650,
		.real_active_width = 1280,
		.hsync_offset = 199,
		.vsync_offset = 25,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,		
	},
	{
		.name = "VGA 1280x768",
		.ana = ana_vga_1280x768_corona,
		.height = 768,
		.total_height = 798,
		.active_height = 768,
		.width = 1280,
		.total_width = 1664,
		.real_active_width = 1280,		
		.hsync_offset = 259,
		.vsync_offset = 27,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	},
	{	
		.name = "VGA 1280x1024",
		.ana = ana_vga_1280x1024_corona,
		.height = 1024,
		.total_height = 1066,
		.active_height = 1024,
		.width = 1280,
		.total_width = 1688,
		.real_active_width = 1280,
		.hsync_offset = 293,
		.vsync_offset = 41,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	},
	{
		.name = "VGA 1360x768",
		.ana = ana_vga_1360x768_corona,
		.height = 768,
		.total_height = 795,
		.active_height = 768,
		.width = 1376,
		.total_width = 1792,
		.real_active_width = 1360,
		.hsync_offset = 301,
		.vsync_offset = 24,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	},	
	{	
		.name = "VGA 1440x900",
		.ana = ana_vga_1440x900_corona,
		.height = 896, //FIXME: EDRAM isn't big enough to render 1440*900
		.total_height = 934,
		.active_height = 900,
		.width = 1440,
		.total_width = 1904,
		.real_active_width = 1440,
		.hsync_offset = 317,
		.vsync_offset = 31,
		.composite_sync = 0,
		.is_progressive = 1,
		.rgb = 1,
		.hdmi = 0,
		.overscan = 0,
	},
};

#endif